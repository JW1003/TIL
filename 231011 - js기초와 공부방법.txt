1. 이론

(1)자바스크립트 엔진
브라우저에서 자바스크립트가 동작하기 위해선, 자바스크립트 엔진이 필요하다.

인터프리터 -> 런타임 시 코드를 한줄씩 번역해서 실행한다
초반 실행 속도는 빠르지만, 실행 하면서 코드를 한줄씩 번역하기 때문에 실행속도가 비교적 느릴 수 있는 단점이 있음(BUT 지속적인 개선이 되고있다)

비교) 컴파일러 -> 실행 전에 모든 코드를 컴파일링 해서, 컴퓨터가 이해할 수 있는 실행파일로 만든다 ex) JAVA
컴파일러를 사용하는 언어의 특징 : 처음 구동할 때 컴파일링 작업 시간이 소요되지만, 한번 실행해본 이후로는 빠르게 실행할 수 있음.

(2)각 브라우저와 노드의 자바스크립트 엔진
Internet Explorer = Chakara
Chrome = V8
safari = Javascript Core
firefox = SpiderMonkey
Edge  = V8
nodeJs = V8

(3)ECMA script
자바스크립트 문법의 규격, 표준사항을 정의한 것
각각의 엔진들이 ECMA script에 맞춰 번역을 하고, 코딩도 ECMA script에 맞춰 구현하도록 일종의 약속.

(4)앞으로의 공부방법
자바스크립트는 문법일 뿐. 웹 api나 노드api, 각종 프레임워크 사용법을 익혀야 구동하는 프론트엔드, 백엔드 프로그램을 만들 수 있다.
but 가장 핵심인 자바스크립트를 잘 익혀놔야 나머지 것들도 사용할 수 있어! 기초 탄탄!

자바스크립트 공부 과정
기초 (기본 문법, 사용법)
    - let,const
    - if, for, switch, while
    - function
    - object
심화 ( 내부 구현 사항 )
    - Prototype - Hoisting
    - Scope - Closure


2. 실습 중 정리
- HTML 작성시 "! + TAB" 으로 HTML 기본양식 자동완성
- 노드몬 설치 "npm install nodemon -g" (글로벌로 설치. 안하면 지금 있는 폴더에 설치됨)
    노드몬은 파일을 계속 모니터링 해서, 터미널을 여러번 걸치지 않아도 실시간으로 파일을 관찰해서, 실행 내용을 알수있게 해줌.
    ctrl + c 로 종료 가능

(1) 변수 Variables
- 값을 저장하는 공간
- 자료를 저장할 수 있는 "이름이 주어진 기억장소"
let a;
let = 키워드
a = 변수의 이름
; = 문의 끝

(2) 이름짓기 Naming Variables
- 저장된 값을 잘 나타낼 수 있는 (구체적일 수록 좋아) 의미있는 이름을 지어야 한다
- keyword 예약어는 피해야 한다

(3) 데이터 타입 
- 원시 primitive type : 단일 데이터
    - 숫자 number  , Bigint (2^53 -1) * js는 숫자를 상세한 타입으로 나누지 않아서 정수 음수 실수 모두 let으로 정의 가능
    - 문자 String
    - 참거짓 boolean
    - null
    - undefined
    - Symbol

- 객체 object type : 복합 데이터
    - object - array 등 자료구조...
    - function 